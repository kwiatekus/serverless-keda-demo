apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: kedas.operator.kyma-project.io
spec:
  group: operator.kyma-project.io
  names:
    kind: Keda
    listKind: KedaList
    plural: kedas
    singular: keda
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.generation
      name: generation
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    - jsonPath: .status.state
      name: state
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Keda is the Schema for the kedas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KedaSpec defines the desired state of Keda
            properties:
              env:
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              logging:
                properties:
                  metricServer:
                    properties:
                      level:
                        enum:
                        - "0"
                        - "4"
                        type: string
                    type: object
                  operator:
                    properties:
                      format:
                        enum:
                        - json
                        - console
                        type: string
                      level:
                        enum:
                        - debug
                        - info
                        - error
                        type: string
                      timeEncoding:
                        enum:
                        - epoch
                        - millis
                        - nano
                        - iso8601
                        - rfc3339
                        - rfc3339nano
                        type: string
                    type: object
                type: object
              resources:
                properties:
                  metricServer:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                  operator:
                    description: ResourceRequirements describes the compute resource
                      requirements.
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
            type: object
          status:
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              state:
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keda-operator
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keda-leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: keda-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - configmaps/status
  - events
  - services
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - external
  - pods
  - secrets
  - serviceaccounts
  verbs:
  - create
  - delete
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - delete
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
- apiGroups:
  - '*'
  resources:
  - '*/scale'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs:
  - create
  - delete
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  - statefulsets
  verbs:
  - list
  - watch
- apiGroups:
  - autoscaling
  resources:
  - horizontalpodautoscalers
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
- apiGroups:
  - external.metrics.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - keda.sh
  resources:
  - clustertriggerauthentications
  - clustertriggerauthentications/status
  - scaledjobs
  - scaledjobs/finalizers
  - scaledjobs/status
  - scaledobjects
  - scaledobjects/finalizers
  - scaledobjects/status
  - triggerauthentications
  - triggerauthentications/status
  verbs:
  - '*'
- apiGroups:
  - operator.kyma-project.io
  resources:
  - kedas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.kyma-project.io
  resources:
  - kedas/finalizers
  verbs:
  - patch
  - update
- apiGroups:
  - operator.kyma-project.io
  resources:
  - kedas/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  verbs:
  - create
  - delete
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keda-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keda-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: keda-leader-election-rolebinding
  namespace: kyma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-leader-election-role
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keda-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-manager-role
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: kyma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keda-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-proxy-role
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: kyma-system
---
apiVersion: v1
data:
  details: "header:\n  - name: Ready  \n    source: status.conditions[0].status\n
    \   description: status.conditions[0].message\n    widget: Badge\n    highlights:\n
    \     positive:\n        - 'True'\n      negative:\n        - 'False'\nbody:\n
    \ - name: columns.container\n    widget: Columns\n    children:\n      - name:
    Scale Target\n        widget: Panel\n        children:\n          - name: Kind\n
    \           source: spec.scaleTargetRef.kind\n          - name: Name\n            source:
    spec.scaleTargetRef.name\n            widget: ResourceLink\n            resource:\n
    \             name: spec.scaleTargetRef.name\n              namespace: $root.metadata.namespace\n
    \             kind: spec.scaleTargetRef.kind\n      - name: Scale Config\n        widget:
    Panel\n        children:\n          - name: Minimum number of replicas\n            source:
    spec.minReplicaCount\n          - name: Maximum number of replicas\n            source:
    spec.maxReplicaCount\n          - name: Polling Interval\n            source:
    spec.pollingInterval\n            visibility: '$exists($value)'\n          - name:
    Cooldown Period\n            source: spec.cooldownPeriod  \n            visibility:
    '$exists($value)'    \n      - name: Fallback\n        widget: Panel\n        source:
    spec.fallback\n        visibility: '$exists($value)' \n        children:\n          -
    name: Fallback number of replicas\n            source: replicas\n          - name:
    Trigger Failure Threshold\n            source: failureThreshold\n  - source: spec.triggers\n
    \   name: Triggers\n    widget: Table\n    collapsibleTitle: type\n    collapsible:\n
    \     - source: metadata\n        widget: CodeViewer\n        language: \"'yaml'\"\n
    \ - widget: EventList\n    filter: '$matchEvents($$, $root.kind, $root.metadata.name)'\n
    \   name: events\n    defaultType: information\n"
  form: "- path: spec.minReplicaCount\n  inputInfo: \"Minimum number of replicas to
    scale down to\"\n  simple: true\n- path: spec.maxReplicaCount\n  inputInfo: \"Maximum
    number of replicas to scale up to\"\n  simple: true\n- path: spec.cooldownPeriod\n
    \ inputInfo: \"The minimal inactivity period (in seconds) to wait before scaling
    the resource back to 0 (default: 5 minutes)\"\n- path: spec.pollingInterval\n
    \ inputInfo: \"Interval (in seconds) to check each trigger on (default: 30 seconds).\"\n-
    path: spec.scaleTargetRef\n  widget: FormGroup\n  simple: true\n  children:\n
    \ - path: kind\n    simple: true\n    required: true\n    inputInfo: \"Type of
    the scale target resource. For example `Deployment`\"\n    trigger: [kindChanged]\n
    \   enum:\n      - Function\n      - Deployment\n  - path: apiVersion\n    simple:
    true\n    required: true\n    inputInfo: \"Api group and api version of the scale
    target resource. For example `apps/v1`\"\n    subscribe:\n      kindChanged: \"$root.spec.scaleTargetRef.kind
    = 'Function'?'serverless.kyma-project.io/v1alpha2':'apps/v1'\"\n  - path: name\n
    \   simple: true\n    widget: Resource\n    visibility: $root.spec.scaleTargetRef.kind
    = 'Function'\n    overwrite: false\n    inputInfo: \"Name of the scale target
    resource\"\n    resource:\n      kind: Function\n      version: v1alpha2\n      group:
    serverless.kyma-project.io\n      scope: namespace\n  - var: dummy\n    simple:
    true\n    required: false\n    visibility: false\n    advanced: false\n  - path:
    name\n    simple: true\n    widget: Resource\n    inputInfo: \"Name of the scale
    target resource\"\n    visibility: $root.spec.scaleTargetRef.kind = 'Deployment'\n
    \   overwrite: false\n    resource:\n      kind: Deployment\n      version: v1\n
    \     group: apps\n      scope: namespace\n- path: spec.fallback\n  widget: FormGroup\n
    \ required: false\n  children:\n  - path: replicas\n    inputInfo: \"Number of
    replicas to set in case scalers has failed to get metrics from their source\"
    \n  - path: failureThreshold\n    inputInfo: \"Number of consecutive times each
    scaler has failed to get metrics from its source before the fallback amount of
    replicas is set\"\n- path: spec.triggers\n  widget: GenericList\n  defaultExpanded:
    true\n  simple: true\n  children:\n  - path: '[].type'\n    simple: true\n    required:
    true\n  - path: '[].metadata'\n    simple: true\n    required: true\n    widget:
    CodeEditor\n    language: \"'YAML'\"\n"
  general: |
    resource:
      kind: ScaledObject
      group: keda.sh
      version: v1alpha1
    urlPath: scaledobjects
    category: Workloads
    name: Scaled Objects
    scope: namespace
    description: >-
      {{`{{[Scaled Objects](https://keda.sh/docs/2.8/concepts/scaling-deployments/#scaledobject-spec)}}
      describes which workloads should KEDA scale and what the triggers for the scaling are.`}}
  list: "- name: Target\n  source: $join([spec.scaleTargetRef.name, ' (', spec.scaleTargetRef.kind,
    ')'])\n- name: Triggers\n  source: spec.triggers[].type\n  widget: JoinedArray\n-
    name: Replicas\n  source: $join([$string(spec.minReplicaCount), '..', $string(spec.maxReplicaCount)])\n-
    name: Ready  \n  source: status.conditions[0].status\n  description: status.conditions[0].message\n
    \ widget: Badge\n  highlights:\n    positive:\n      - 'True'\n    negative:\n
    \     - 'False' \n"
  presets: |-
    - name: CPU Consumption Triggered
      value:
        apiVersion: keda.sh/v1alpha1
        kind: ScaledObject
        metadata:
          name: ''
          labels: {}
          annotations: {}
        spec:
          triggers:
          - type: cpu
            metadata:
              type: Utilization
              value: '50'
    - name: Prometheus Triggered
      value:
        apiVersion: keda.sh/v1alpha1
        kind: ScaledObject
        metadata:
          name: ''
          labels: {}
          annotations: {}
        spec:
          triggers:
          - type: prometheus
            metadata:
              serverAddress: http://prometheus-operated.kyma-system.svc.cluster.local:9090
              metricName: ''
              query: ''
              threshold: ''
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: scaledobjects.keda.sh
    busola.io/extension: resource
    busola.io/extension-version: "0.5"
  name: keda-scaledobjects.keda.sh
  namespace: kube-public
---
apiVersion: v1
data:
  keda_operator_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 4123c01c.operator.kyma-project.io
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: keda-manager-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: operator
  name: keda-operator-metrics-service
  namespace: kyma-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: operator
  name: keda-operator
  namespace: kyma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: operator
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: europe-docker.pkg.dev/kyma-project/prod/keda-manager:v20230316-0933845e
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: keda-operator
      terminationGracePeriodSeconds: 10
